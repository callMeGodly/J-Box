#ifndef DISPLAY_H
#define DISPLAY_H
#include <Arduino.h>
#include <U8g2lib.h>
#include "TouchScreen.h"
#include <string>
#include <math.h>
void menuScreen();
void setupScreen();
void gpsScreen();
void circularGaugeLayout();
void naughtTo60Screen();
void initializeDisplay();
//class performanceTestScreen

void initializeMenuScreen();
void initializeEaganM3_Screen();
void EaganM3_Screen();
void displayScreen();
void initializeEaganInsightScreen();
void drawMph(int mph);
void drawRpm(int rpm);
void drawBoxGauge(int current, int max, int cutoff = 4000, int redLine = 10000);
void drawGear(String gear);
void drawLapTime(int *lapTime);
void drawCoolantTemp(int coolantTemp);
void drawEngineTemp(int engineTemp);
void drawFuel(int fuelLevel);
void drawVoltage(double battVoltage);
void drawBackground2();
#define YP A1  // must be an analog pin, use "An" notation!
#define XM A8  // must be an analog pin, use "An" notation!
#define YM A3  // can be a digital pin
#define XP A2   // can be a digital pin
const int backlightPin = 23;
#define MINPRESSURE 10
#define MAXPRESSURE 1000

/* Notes about display performance as of 12/20/21
TLDR: 
-Avoid calling sendBuffer() as much as possible, aim to do it only once per update cycle and outside of functions or classes
-Avoid clearing the buffer in performance cases as you then have to reconstruct the buffer which can incur a penlty
    if there are multiple fonts or functions that must be called in order to format the screen, 
    however this still seems to be relatively fast as the teensy is doing the work and no information is sent to the screen.
- use updateDisplayArea for 


Display performance seems decent in that it takes around 30ms to wite the screen black or white;
teensy 3.6 can do it in 20ms!!!
meaning every pixel in the buffer has been changed.
This also means every call to u8g2.sendBuffer() will take 30ms to complete assuming the buffer contains information that fills up the screen
or modifies pixels located in the corner of the screen as the full buffer needs to be sent to modify information in the last sections of display ram
if a small section needs to be changed quickly u8g2.updateDisplayArea() may be used, as it allows the ram to only be modified at the relevent bytes. 
The limititaion being that the x cordinates of the area update box cannot be modified (with the 6963 display)
this may be a limitation of the u8g2 library, but the controller datasheet does not seem to allow selection of columns for a start.
also note that the function requires tile cordinates which are 8x8 sections of the display. Also the display has been rotated 180*
for use in J-box. So a translation must be done to arrive at the appropriate tile cordinates for an update.

also note that amount of time to write information to the display likely cannot be sped up as the controller datasheet
requires the CE line to be off for 80ns with the data on the ports then on for another 40ns with the data still on the bus.
this means 120ns per byte of data written to the screen, 
if update times are affecting other actions consider implementing timed interupts in u8g2

*/
#define JboxIcon_width 100
#define JboxIcon_height 100
static unsigned const char JboxIcon_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x07,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x80,
   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00,
   0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x00,
   0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xcf, 0x00,
   0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x67,
   0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
   0xf2, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xe0, 0xd3, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x20, 0xe9, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x20, 0x7d, 0x00, 0x00, 0x00, 0x60, 0x60, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xdf, 0xa0, 0xdf, 0x00, 0x00, 0x00, 0x60, 0xe0, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x1f, 0xe1, 0xce, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0xe1, 0xea, 0x00, 0x00, 0x00, 0x60, 0x20,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xa1, 0xd7, 0x00, 0x00, 0x00, 0x60,
   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xa1, 0xea, 0x00, 0x00, 0x00,
   0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xa1, 0xf6, 0x00, 0x00,
   0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xa1, 0xdf, 0x00,
   0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe1, 0xfb,
   0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x80, 0xe1,
   0xed, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x60, 0x01, 0x00, 0x80,
   0xe1, 0xf7, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xe0, 0x01, 0x00,
   0x80, 0xe1, 0x7d, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xe0, 0x01,
   0x00, 0x80, 0xa1, 0x6e, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xe0,
   0x00, 0x00, 0x80, 0xa1, 0xc7, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00,
   0xe0, 0x01, 0x00, 0x80, 0xa1, 0xd3, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00,
   0x00, 0xe0, 0x01, 0x00, 0x80, 0xa1, 0xda, 0x00, 0x00, 0x00, 0x60, 0x20,
   0x00, 0x00, 0xe0, 0x01, 0x00, 0x80, 0xa1, 0xbd, 0x00, 0x00, 0x00, 0x60,
   0x20, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x80, 0xa1, 0x97, 0x00, 0x00, 0x00,
   0x60, 0x20, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x80, 0xa1, 0x8d, 0x00, 0x00,
   0x00, 0x60, 0x20, 0x00, 0x00, 0x60, 0x01, 0x00, 0x80, 0xe1, 0xee, 0x00,
   0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x60, 0x01, 0x00, 0x80, 0xe1, 0xb6,
   0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x80, 0xe1,
   0xfe, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x80,
   0xa1, 0xea, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x1c, 0xa0, 0x01, 0x00,
   0x80, 0xa1, 0xad, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x18, 0xe0, 0x01,
   0x00, 0x80, 0xa1, 0xe7, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x1c, 0x60,
   0x01, 0x00, 0x80, 0xa1, 0xf3, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x1c,
   0x60, 0x01, 0x00, 0x80, 0xa1, 0xea, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00,
   0x24, 0xf0, 0x01, 0x00, 0x80, 0xa1, 0xcd, 0x00, 0x00, 0x00, 0x60, 0x20,
   0x00, 0xe8, 0xff, 0x00, 0x00, 0x80, 0xa1, 0xd6, 0x00, 0x00, 0x00, 0x60,
   0x20, 0x00, 0x70, 0x7f, 0x00, 0x00, 0x80, 0xe1, 0xcb, 0x00, 0x00, 0x00,
   0x60, 0x20, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x80, 0xa1, 0xaa, 0x00, 0x00,
   0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xa1, 0x95, 0x00,
   0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe1, 0xba,
   0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe1,
   0xaf, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
   0xe1, 0xd7, 0x00, 0x00, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x80, 0xa1, 0xad, 0x00, 0x00, 0x00, 0x60, 0x20, 0x10, 0x02, 0x00, 0x00,
   0x3c, 0xf1, 0x61, 0xd6, 0x00, 0x00, 0x00, 0x60, 0xe0, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x7f, 0xe0, 0xf7, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xa0, 0x7b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xff, 0x00, 0x00, 0x00, 0x60, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xef, 0xde, 0x00, 0x00, 0x60,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x36, 0xc0, 0x00, 0x00,
   0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x0e, 0xe0, 0x00,
   0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0e, 0xb8,
   0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x05,
   0xfc, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
   0x01, 0xd6, 0x00, 0x00, 0xe8, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff,
   0xbf, 0x00, 0xde, 0x00, 0x00, 0xe4, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff,
   0xff, 0x7e, 0x80, 0xff, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xc0, 0xd7, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xe0, 0xd3, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xf7, 0x00, 0xe0, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x00, 0x60, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xdf, 0x00, 0x60, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xf7, 0x00, 0x60,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xad, 0x00,
   0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff,
   0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98,
   0xd7, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xf8, 0x6e, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xf8, 0xff, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf8, 0xf6, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xd8, 0xd3, 0x00, 0x60, 0x80, 0x0f, 0x00, 0x00, 0x00,
   0xfb, 0xef, 0xff, 0x07, 0xf8, 0xff, 0x00, 0x60, 0x80, 0x0e, 0x00, 0x00,
   0x00, 0xff, 0xff, 0xff, 0x07, 0x38, 0xbd, 0x00, 0x60, 0x80, 0x0f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xff, 0x00, 0x60, 0x80, 0x09,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x77, 0x00, 0x60, 0x80,
   0x0f, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x3b, 0x00, 0x60,
   0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1d, 0x00,
   0x60, 0x00, 0x00, 0x0c, 0x70, 0xf8, 0x98, 0x01, 0x00, 0x00, 0xd8, 0x0f,
   0x00, 0x60, 0x00, 0x00, 0xcc, 0x71, 0x88, 0xd0, 0x00, 0x00, 0x00, 0x38,
   0x07, 0x00, 0x60, 0x00, 0x60, 0x0c, 0x90, 0xa8, 0x60, 0x00, 0x00, 0x00,
   0xf8, 0x03, 0x00, 0x60, 0x00, 0x60, 0x0c, 0x90, 0x88, 0xb0, 0x00, 0x00,
   0x00, 0xf8, 0x01, 0x00, 0x60, 0x00, 0xe0, 0x0f, 0xf0, 0xf8, 0x98, 0x01,
   0x00, 0x00, 0xd8, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };
#define ScRacing_width 63
#define ScRacing_height 72
static unsigned const char ScRacing_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
   0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x1c, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00,
   0x80, 0x03, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x1c, 0x00, 0x00,
   0x00, 0x7c, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x00, 0xf0, 0x03, 0x00, 0x00,
   0x00, 0x00, 0xfc, 0x00, 0x10, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x80, 0x00,
   0x10, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x80, 0x01, 0x10, 0x00, 0xc0, 0xff,
   0xff, 0x0f, 0x80, 0x01, 0x10, 0x00, 0xe0, 0xff, 0xff, 0x07, 0x80, 0x01,
   0x10, 0x00, 0xf0, 0xff, 0xff, 0x01, 0x80, 0x01, 0x10, 0x00, 0xf8, 0xff,
   0xff, 0x01, 0x80, 0x01, 0x10, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x80, 0x00,
   0x10, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0xfc, 0x07,
   0x0e, 0x00, 0x80, 0x00, 0x10, 0x00, 0xfe, 0xe1, 0xff, 0x00, 0x80, 0x00,
   0x10, 0x00, 0xfe, 0xf8, 0xff, 0x03, 0x80, 0x00, 0x10, 0x00, 0x7e, 0xfc,
   0xff, 0x07, 0x80, 0x00, 0x10, 0x00, 0x7e, 0xfe, 0xff, 0x0f, 0x80, 0x00,
   0x10, 0x00, 0x3e, 0xfe, 0xff, 0x0f, 0x80, 0x00, 0x10, 0x00, 0x3e, 0xff,
   0xff, 0x00, 0x80, 0x00, 0x10, 0x00, 0x3e, 0xff, 0x1f, 0x00, 0x80, 0x00,
   0x10, 0x00, 0xbe, 0xff, 0x0f, 0x00, 0x80, 0x00, 0x10, 0x00, 0xbe, 0xff,
   0x07, 0x00, 0x80, 0x00, 0x10, 0x00, 0x9e, 0xff, 0x07, 0x00, 0x80, 0x00,
   0x10, 0x00, 0x9e, 0xff, 0x0f, 0x00, 0x80, 0x00, 0x20, 0x00, 0x9e, 0xff,
   0x3f, 0x78, 0x80, 0x00, 0x20, 0x00, 0x9e, 0xff, 0xff, 0xff, 0xc0, 0x00,
   0x20, 0x00, 0x9f, 0xff, 0xff, 0xff, 0x40, 0x00, 0x20, 0x00, 0x0f, 0xff,
   0xff, 0xff, 0x40, 0x00, 0x20, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x60, 0x00,
   0x40, 0x00, 0x07, 0xff, 0xff, 0xff, 0x20, 0x00, 0x40, 0x80, 0x03, 0xfe,
   0xff, 0xff, 0x20, 0x00, 0x40, 0xc0, 0x01, 0x00, 0x00, 0xe0, 0x30, 0x00,
   0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x80, 0x10, 0x00, 0x00,
   0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
   0x00, 0x01, 0x82, 0xfd, 0xf3, 0x0f, 0x08, 0x00, 0x00, 0x01, 0x82, 0x0d,
   0x10, 0x00, 0x08, 0x00, 0x00, 0x03, 0x82, 0xfd, 0x13, 0x00, 0x0c, 0x00,
   0x00, 0x02, 0x82, 0xfd, 0x13, 0x00, 0x04, 0x00, 0x00, 0x06, 0x82, 0x01,
   0x12, 0x00, 0x06, 0x00, 0x00, 0x04, 0xfe, 0xfd, 0xf3, 0x0f, 0x02, 0x00,
   0x00, 0x0c, 0xfe, 0xfd, 0xf3, 0x0f, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00,
   0x00, 0x00, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
   0x00, 0x30, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x60, 0x00, 0x00,
   0x00, 0xc0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
   0x00, 0xc0, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
   0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00,
   0x00, 0x00, 0x07, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,
   0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x03, 0x00, 0x00,
   0x00, 0x00, 0x38, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
   0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


unsigned long lastDisplayUpdate = 0;
unsigned long lastMphUpdate;
unsigned long lastRpmUpdate;
unsigned long lastCTempUpdate;
unsigned long lastETempUpdate;
unsigned long lastVoltUpdate;
unsigned long lastFuelUpdate;
unsigned long lastLapTimeUpdate;
unsigned long lapTimeStart;
unsigned long lastGearUpdate;
// unsigned long lastTimeUpdate;
int mph=0;
int rpm=0;
int cutoff = 2000;
int lapTime[3] = {0,0,0};
int coolantTemp = 90;
int engineTemp = 90;
int fuelLevel = 100;
double battVoltage = 11.5;
String gears[6] = {"N","1","2","3","4","5"}; // this could probably be done with just a char [] (with less resources)
int gIndex = 0;
int gearDir = 1;
bool updateRequest = true; // use this as a flag to see if the screen needs to be updated
void (*screenPointer)() = &initializeMenuScreen; // this points to the screen we want to show
void (*lastScreen)(); // this stores the last screen displayed
Draw painter = Draw();
#endif